<?phpnamespace VS\Models;//// Модель работы с таблицей сообщений//class MessagesModel{    private static $instance; 	// ссылка на экземпляр класса    private $tableModel; // делегируем базовые операции общей табличной модели    private $tableName;    private $tableKey;    public static function instance($tableName = 'Messages', $tableKey = 'id')    {        if (self::$instance == null){            self::$instance = new self($tableName, $tableKey);        }        return self::$instance;    }    private function __construct($tableName, $tableKey)    {        $this->tableModel = new TableModel($tableName, $tableKey);        $this->tableName = $tableName;        $this->tableKey = $tableKey;    }    // Отправить сообщение	//	public function sendMessage($title, $content)	{		// Подготовка.		$title = trim($title);		$content = trim($content);		// Проверка.		if (($title == '') || ($content == '')){			return false;        }		// Запрос.		$object = array('title' => $title,                    'content' => $content,                    'created' => date("Y-m-d H:i:s"),                    'viewed' => 'no');        $this->tableModel->insertRecord($object);		return true;	}    public function getLast3Messages()    {        $query = "SELECT *				  FROM $this->tableName				  ORDER BY created DESC LIMIT 3";        return $this->tableModel->getRecordsByQuery($query);    }    public function getLast3UnreadMessages()    {        $query = "SELECT *				  FROM $this->tableName				  WHERE viewed = 'no'				  ORDER BY created DESC LIMIT 3";        return $this->tableModel->getRecordsByQuery($query);    }    public function deleteMessage($id)    {        return $this->tableModel->deleteRecord($id);    }    public function markMessageAsViewed($id)    {        $object = array('viewed' => 'yes');        $this->tableModel->updateRecord($object, $id);        return true;    }}