<?phpnamespace VS\Models;//// Модель работы с абстрактной таблицей//class TableModel{	private $msql; // драйвер БД    private $tableName;    private $tableKey;		public function  __construct($tableName, $tableKey)	{		$this->msql = SQLModel::instance('localhost', 'root', 'root', 'Messenger');        $this->tableName = $tableName;        $this->tableKey = $tableKey;	}		//	// получить все записи из таблицы	//    public  function getAllRecords()	{		$query = "SELECT * 				  FROM $this->tableName				  ORDER BY $this->tableKey DESC";				  		return $this->msql->select($query);	}	//	// получить запись по id	//    public function getRecord($id)	{		// Запрос.		$t = "SELECT * 			  FROM $this->tableName			  WHERE $this->tableKey = %d";			  		$query = sprintf($t, $id);		$result = $this->msql->select($query);		return $result;	}    //    // получить записи по запросу    //    public function getRecordsByQuery($query)    {        $result = $this->msql->select($query);        return $result;    }    //    // добавить запись в таблицу    //    public function insertRecord($object)    {        return $this->msql->insert($this->tableName, $object);    }    //    // обновить запись в таблице    //    public function updateRecord($object, $id)    {        $where = sprintf("$this->tableKey = %d", $id);        $this->msql->update($this->tableName, $object, $where);    }    //	// Удалить запись	//    public function deleteRecord($id)	{        $where = sprintf("$this->tableKey = %d", $id);		$this->msql->delete($this->tableName, $where);		return true;	}    //    // получить количество записей в таблице    //    public function getNumberOfRecords()    {        $query = "SELECT COUNT(*) AS number_of_records FROM $this->tableName";        $records =  $this->msql->select($query);        if (count($records) > 0){            return $records[0]['number_of_records'];        } else {            return 0;        }    }}